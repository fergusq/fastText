/* Copyright (c) 2017 Iikka Hauhio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

record Calculator(model) {
	model : string = model
	t : Thread = thread({ bufferedExec SOURCE_DIR.."/fasttext", "calculator", self.model, "--no-prompt" })
	
	function distance a, b {
		print `$a qV $b` | self.t.push
		self.t.pull | split | parseFloating _
	}
	
	function neighbours word {
		print `$word q.` | self.t.push
		while true do
			self.t.pull line
			break if [ line = "END" ]
			
			split line
		done | [ _, parseFloating(_) ]
	}
	
	function start {
		self.t.start
	}
	
	function stop {
		print `/quit` | self.t.push
		self.t.finish
	}
}

quote word {
	push(word) | replace `"`, `\\"`
}
